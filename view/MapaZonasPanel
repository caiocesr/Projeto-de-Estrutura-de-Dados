package view;

import javax.swing.*;
import java.awt.*;
import java.util.HashMap;
import java.util.Map;

public class MapaZonasPanel extends JPanel {
    private String zonaDestacada = null;

    // Coordenadas fixas para o layout do grafo
    private final Map<String, Point> posicoes = new HashMap<>();

    public MapaZonasPanel() {
        setPreferredSize(new Dimension(600, 300));
        setBackground(new Color(245, 245, 245));

        posicoes.put("A", new Point(50, 100));
        posicoes.put("B", new Point(150, 50));
        posicoes.put("C", new Point(250, 100));
        posicoes.put("D", new Point(350, 50));
        posicoes.put("E", new Point(450, 100));
    }

    public void setZonaDestacada(String nome) {
        this.zonaDestacada = nome;
        repaint();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        drawMapa((Graphics2D) g);
    }

    private void drawMapa(Graphics2D g) {
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g.setStroke(new BasicStroke(2));

        // Cores
        Color corZona = new Color(173, 216, 230);
        Color corDestaque = new Color(255, 165, 0);
        Color corTexto = Color.BLACK;
        Color corLinha = Color.GRAY;

        // Arestas com pesos
        desenharAresta(g, "A", "B", 2);
        desenharAresta(g, "A", "C", 5);
        desenharAresta(g, "B", "C", 1);
        desenharAresta(g, "B", "D", 4);
        desenharAresta(g, "C", "E", 3);
        desenharAresta(g, "D", "E", 2);

        // Zonas
        for (String nome : posicoes.keySet()) {
            Point p = posicoes.get(nome);
            g.setColor(nome.equals(zonaDestacada) ? corDestaque : corZona);
            g.fillOval(p.x - 20, p.y - 20, 40, 40);
            g.setColor(Color.BLACK);
            g.drawOval(p.x - 20, p.y - 20, 40, 40);
            g.setFont(new Font("SansSerif", Font.BOLD, 14));
            g.drawString(nome, p.x - 5, p.y + 5);
        }
    }

    private void desenharAresta(Graphics2D g, String origem, String destino, int peso) {
        Point p1 = posicoes.get(origem);
        Point p2 = posicoes.get(destino);
        g.setColor(Color.GRAY);
        g.drawLine(p1.x, p1.y, p2.x, p2.y);

        // Peso da aresta no meio da linha
        int px = (p1.x + p2.x) / 2;
        int py = (p1.y + p2.y) / 2;
        g.setColor(Color.BLACK);
        g.setFont(new Font("SansSerif", Font.PLAIN, 12));
        g.drawString(String.valueOf(peso), px, py - 5);
    }
}
